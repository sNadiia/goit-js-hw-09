{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SACA,MAAMC,EAAO,CACXC,OAAQC,SAASC,cAAc,SAC/BC,MAAOF,SAASC,cAAc,YAE1BE,MAAEC,EAAKC,OAAEC,EAAMC,KAAEC,GAASV,EAAKC,OAAOU,SAyB5C,SAASC,EAAcC,EAAUC,GAC3B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAG3BC,YAAW,KACaC,KAAKC,SAAW,GAEpCJ,EAAQ,C,SAAEH,EAAUR,MAAAS,IAEpBG,EAAO,C,SAAEJ,EAAUR,MAAAS,GAAQ,GAE5BA,EAAM,G,CAjCjBd,EAAKC,OAAOoB,iBAAiB,UAC7B,SAAsBC,GACpBA,EAAEC,iBAEF,IAAIC,EAAaC,OAAOnB,EAAMoB,OAC9B,MAAMC,EAAYF,OAAOf,EAAKgB,OACxBE,EAAsBH,OAAOjB,EAAOkB,OAK1C,IAAK,IAAIG,EAAI,EAAGA,EAAID,EAAqBC,GAAK,EAAGL,GAAcG,EAC7Df,EAAciB,EAAGL,GAChBM,MAAK,EAACjB,SAAEA,EAAUR,MAAA0B,MACjBjC,EAAAkC,OAAOC,QAAQ,uBAAqBpB,QAAiBkB,MAAU,IAEhEG,OAAM,EAACrB,SAAEA,EAAUR,MAAA8B,MAClBrC,EAAAkC,OAAOC,QAAQ,sBAAoBpB,QAAiBsB,MAAU,G","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\nconst refs = {\n  formEl: document.querySelector('.form'),\n  btnEl: document.querySelector('button'),\n};\nconst { delay, amount, step } = refs.formEl.elements;\n// console.dir(refs.formEl);\n\nrefs.formEl.addEventListener('submit', onBtnHandler);\nfunction onBtnHandler(e) {\n  e.preventDefault();\n  // console.dir(e);\n  let firstDelay = Number(delay.value);\n  const delayStep = Number(step.value);\n  const amountOfNewPromises = Number(amount.value);\n  // console.log(firstDelay);\n  // console.log(delayStep);\n  // console.log(amountOfNewPromises);\n   \n  for (let i = 0; i < amountOfNewPromises; i += 1, firstDelay += delayStep) {\n    createPromise(i, firstDelay)\n    .then(({ position, delay }) => {\n      Notify.failure(`✅ Fulfilled promise ${position} in ${delay}ms`);\n    })\n    .catch(({ position, delay }) => {\n      Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n    });\n  }\n}\n\nfunction createPromise(position, delay) {\n      return new Promise((resolve, reject) => {\n        // console.log(`Creating promise for ${position} and ${delay}`);\n    \n        setTimeout(() => {\n          const shouldResolve = Math.random() > 0.3;\n          if (shouldResolve) {\n            resolve({ position, delay });\n          } else {\n            reject({ position, delay });\n          }\n        }, delay);\n      });\n    };\n\n//   promise\n//     .then(value => {\n//       console.log(value);\n//     })\n//     .catch(error => {\n//       console.log(error);\n//     })\n//     .finally(() => {\n//       console.log('Final task');\n//     });\n// }\n\n\n// const promise = new Promise((resolve, reject) => {\n//   setTimeout(() => {\n//     resolve(5);\n//   }, 2000);\n// });\n\n// promise\n//   .then(value => {\n//     console.log(value); // 5\n//     return value * 2;\n//   })\n//   .then(value => {\n//     console.log(value); // 10\n//     return value * 3;\n//   })\n//   .then(value => {\n//     console.log(value); // 30\n//   })\n//   .catch(error => {\n//     console.log(error);\n//   })\n//   .finally(() => {\n//     console.log(\"Final task\");\n//   });\n\n// const fetchUserFromServer = username => {\n//   return new Promise((resolve, reject) => {\n//     console.log(`Fetching data for ${username}`);\n\n//     setTimeout(() => {\n//       // Change value of isSuccess variable to simulate request status\n//       const isSuccess = true;\n\n//       if (isSuccess) {\n//         resolve('success value');\n//       } else {\n//         reject('error');\n//       }\n//     }, 2000);\n//   });\n// };\n// fetchUserFromServer('Mango')\n//   .then(user => console.log(user))\n//   .catch(error => console.error(error));\n\n// const makeGreeting = guestName => {\n//   if (guestName === \"\" || guestName === undefined) {\n//     return Promise.reject(\"Guest name must not be empty\");\n//   }\n\n//   return Promise.resolve(`Welcome ${guestName}`);\n// };\n\n// makeGreeting(\"Mango\")\n//   .then(greeting => console.log(greeting))\n//   .catch(error => console.error(error));\n\n\n// resolve(Notify.failure(`✅ Fulfilled promise ${position} in ${delay}ms`));\n\n//   reject(alert(`❌ Rejected promise ${position} in ${delay}ms`));"],"names":["$iQIUW","parcelRequire","$47d4ff9957288465$var$refs","formEl","document","querySelector","btnEl","delay","$47d4ff9957288465$var$delay","amount","$47d4ff9957288465$var$amount","step","$47d4ff9957288465$var$step","elements","$47d4ff9957288465$var$createPromise","position","delay3","Promise","resolve","reject","setTimeout","Math","random","addEventListener","e","preventDefault","firstDelay","Number","value","delayStep","amountOfNewPromises","i","then","delay1","Notify","failure","catch","delay2"],"version":3,"file":"03-promises.10548165.js.map"}