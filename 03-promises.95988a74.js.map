{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SACMC,EAAO,CACXC,OAAQC,SAASC,cAAc,SAC/BC,MAAOF,SAASC,cAAc,WAEAE,EAAAL,EAAKC,OAAOK,SAApCC,EAAwBF,EAAxBG,MAAOC,EAAiBJ,EAAjBK,OAAQC,EAASN,EAATO,KAyBvB,SAASC,EAAcC,EAAUC,GAC3B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAG3BC,YAAW,WACaC,KAAKC,SAAW,GAEpCJ,EAAQ,CAAEH,WAAUN,MAAAO,IAEpBG,EAAO,CAAEJ,WAAUN,MAAAO,G,GAEpBA,E,IAjCXf,EAAKC,OAAOqB,iBAAiB,UAC7B,SAAsBC,GACpBA,EAAEC,iBASF,IAPA,IAAIC,EAAaC,OAAOnB,EAAMoB,OACxBC,EAAYF,OAAOf,EAAKgB,OACxBE,EAAsBH,OAAOjB,EAAOkB,OAKjCG,EAAI,EAAGA,EAAID,EAAqBC,GAAK,EAAGL,GAAcG,EAC7Df,EAAciB,EAAGL,GAChBM,MAAK,SAAAC,G,IAAGlB,EAAQkB,EAARlB,SAAUmB,EAAKD,EAALxB,MACjBV,EAAAoC,OAAOC,QAAQ,uBAAwCC,OAAftB,EAAS,QAAYsB,OAANH,EAAM,M,IAE9DI,OAAM,SAAAL,G,IAAGlB,EAAQkB,EAARlB,SAAUwB,EAAKN,EAALxB,MAClBV,EAAAoC,OAAOC,QAAQ,sBAAuCC,OAAftB,EAAS,QAAYsB,OAANE,EAAM,M","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\nconst refs = {\n  formEl: document.querySelector('.form'),\n  btnEl: document.querySelector('button'),\n};\nconst { delay, amount, step } = refs.formEl.elements;\n// console.dir(refs.formEl);\n\nrefs.formEl.addEventListener('submit', onBtnHandler);\nfunction onBtnHandler(e) {\n  e.preventDefault();\n  // console.dir(e);\n  let firstDelay = Number(delay.value);\n  const delayStep = Number(step.value);\n  const amountOfNewPromises = Number(amount.value);\n  // console.log(firstDelay);\n  // console.log(delayStep);\n  // console.log(amountOfNewPromises);\n   \n  for (let i = 0; i < amountOfNewPromises; i += 1, firstDelay += delayStep) {\n    createPromise(i, firstDelay)\n    .then(({ position, delay }) => {\n      Notify.failure(`✅ Fulfilled promise ${position} in ${delay}ms`);\n    })\n    .catch(({ position, delay }) => {\n      Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n    });\n  }\n}\n\nfunction createPromise(position, delay) {\n      return new Promise((resolve, reject) => {\n        // console.log(`Creating promise for ${position} and ${delay}`);\n    \n        setTimeout(() => {\n          const shouldResolve = Math.random() > 0.3;\n          if (shouldResolve) {\n            resolve({ position, delay });\n          } else {\n            reject({ position, delay });\n          }\n        }, delay);\n      });\n    };\n\n//   promise\n//     .then(value => {\n//       console.log(value);\n//     })\n//     .catch(error => {\n//       console.log(error);\n//     })\n//     .finally(() => {\n//       console.log('Final task');\n//     });\n// }\n\n\n// const promise = new Promise((resolve, reject) => {\n//   setTimeout(() => {\n//     resolve(5);\n//   }, 2000);\n// });\n\n// promise\n//   .then(value => {\n//     console.log(value); // 5\n//     return value * 2;\n//   })\n//   .then(value => {\n//     console.log(value); // 10\n//     return value * 3;\n//   })\n//   .then(value => {\n//     console.log(value); // 30\n//   })\n//   .catch(error => {\n//     console.log(error);\n//   })\n//   .finally(() => {\n//     console.log(\"Final task\");\n//   });\n\n// const fetchUserFromServer = username => {\n//   return new Promise((resolve, reject) => {\n//     console.log(`Fetching data for ${username}`);\n\n//     setTimeout(() => {\n//       // Change value of isSuccess variable to simulate request status\n//       const isSuccess = true;\n\n//       if (isSuccess) {\n//         resolve('success value');\n//       } else {\n//         reject('error');\n//       }\n//     }, 2000);\n//   });\n// };\n// fetchUserFromServer('Mango')\n//   .then(user => console.log(user))\n//   .catch(error => console.error(error));\n\n// const makeGreeting = guestName => {\n//   if (guestName === \"\" || guestName === undefined) {\n//     return Promise.reject(\"Guest name must not be empty\");\n//   }\n\n//   return Promise.resolve(`Welcome ${guestName}`);\n// };\n\n// makeGreeting(\"Mango\")\n//   .then(greeting => console.log(greeting))\n//   .catch(error => console.error(error));\n\n\n// resolve(Notify.failure(`✅ Fulfilled promise ${position} in ${delay}ms`));\n\n//   reject(alert(`❌ Rejected promise ${position} in ${delay}ms`));"],"names":["$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$refs","formEl","document","querySelector","btnEl","$ce04d3a99e08e73b$var$_elements","elements","$ce04d3a99e08e73b$var$delay","delay","$ce04d3a99e08e73b$var$amount","amount","$ce04d3a99e08e73b$var$step","step","$ce04d3a99e08e73b$var$createPromise","position","delay3","Promise","resolve","reject","setTimeout","Math","random","addEventListener","e","preventDefault","firstDelay","Number","value","delayStep","amountOfNewPromises","i","then","param","delay1","Notify","failure","concat","catch","delay2"],"version":3,"file":"03-promises.95988a74.js.map"}